# Changelog
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).

## [v5.1.0] UNRELEASED

### Changed
- Changed the hostname display for existing clusters in the frontend
- Split ClusterEditor component in two smaller components

### Removed
- Removed ptvsd (VS Code debugger) from development-server Docker image

### Fixed
- Fixed bug resulting in the plan type not being always updated in the database

## [v5.0.2] 2020-08-05

### Fixed
- Fixed run instructions in README

## [v5.0.1] 2020-08-04

### Fixed
- Fixed production-server image unable to load DNS module with Git
- Using a dynamic cluster name for live cluster tests to avoid rate limiting from Let's Encrypt

## [v5.0.0] 2020-08-04

### Added
- Added support for Magic Castle's DNS module
- Added configuration.json configuration file
- Added a Cancel button in the cluster editor

### Changed
- A cluster's domain must be selected from a preconfigured list of allowed domains
- Started using Magic Castle version 8.1
- Improved button labelling in the cluster editor
- auth_type is now part of configuration.json instead of being an environment variable
- Changed Spawn and Modify buttons for Apply

### Removed
- Removed the Destroy button in the cluster editor (only in the cluster list now)

### Fixed
- Fixed bug that caused the floating IP not being filled in when the initial plan is cancelled

### Security
- Updated elliptic package from version 6.5.2 to version 6.5.3

## [v4.0.0] 2020-07-29

### Added
- Added automatic schema migration on server start to update the database schema to the latest version
- Added database volume to persist the SQLite database file
- Added magic_castles table for storing information about each Magic Castle cluster
- Added AUTH_TYPE environment variable (either SAML or NONE) to make MC-UI compatible with a local environment and an online deployment
- Added username display and logout button in the frontend when using SAML authentication
- Added admin accounts based on the configuration file
- Added guest password generation button to the cluster editor

### Changed
- Cluster's status and plan_type are now stored in a SQLite database instead of regular files
- Changed API resource /api/magic-castle for /api/magic-castles

### Fixed
- Fixed single page application shown even when the user is logged out (due to page caching)

## [v3.0.3] 2020-07-23

### Added
- Added SAML & HTTPS wiki link in README

### Fixed
- Updated lodash from 4.17.15 to 4.17.19 in /frontend
- Fixed KeyError in TerraformPlanParser when resource was being updated

## [v3.0.2] 2020-07-13

### Changed
- Api hostname and port in the frontend is now relative to the current host, instead of being hardcoded

## [v3.0.1] 2020-07-10

### Added
- Magic Castle configuration can be parsed from main.tf.json when terraform.tfstate does not exist

### Fixed
- Fixed bug that cluster could not be built when the first creation plan was cancelled
- Fixed bug that some errored builds lead to empty public_keys list in the parsed configuration

## [v3.0.0] 2020-07-09

### Added
- Added the list of existing clusters
- Added a progress display for all cluster creation, modification and destruction
- Added a confirmation box of terraform plan before creating, modifying or destroying a cluster 
- Added a confirmation box when exiting the page with unsaved modifications
- Added cluster name validation
- Added a pie chart for the instances count quota
- Added the developer documentation
- Added Docker Compose file for development
- Added optional integration tests that tests the creation, modification and destruction of a live cluster
- Added a demo gif in the README
- Added automated OpenStack api connection testing on server startup

### Changed
- Using clouds.yaml instead of openrc file
- Dockerfile can now produce two images: one for production and one for development
- Domain name modification disabled on existing clusters
- SSH public key can now be pasted as text or uploaded through a file
- Now generating a main.tf.json instead of main.tf
- Backend API now uses Method Views instead of Flask Restful

### Removed
- start.sh script

### Security
- Added string sanitization to main.tf.json
