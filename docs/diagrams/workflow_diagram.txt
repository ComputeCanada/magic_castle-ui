title Magic Castle UI Workflow

participant User
participant Bash script & Docker
participant Browser
participant Flask Server
participant Terraform

User->Bash script & Docker: Sets up environment variables for Terraform
User->Bash script & Docker: Launches Magic Castle UI
Bash script & Docker->Flask Server: Starts Flask server
activate Flask Server
Flask Server-->Bash script & Docker: Web app URL
deactivate Flask Server
Bash script & Docker-->User: Web app URL
Bash script & Docker->Browser: Navigates to web app URL
Browser->Flask Server: Requests homepage
activate Flask Server
Flask Server-->Browser: Cluster creation form
deactivate Flask Server
Browser-->User: Displays cluster creation form
User->Browser: Fills in the form
User->Browser: Clicks on the "Spawn" button
Browser-->User: Displays spinning wheel
Browser->>Flask Server: Sends the form content
activate Flask Server
Flask Server->Flask Server: Creates a folder with the cluster name
Flask Server->Flask Server: main.tf Jinja template is filled in with the form variables
Flask Server->Terraform: Terraform init
activate Terraform
Flask Server->Terraform: Terraform apply
Browser->Flask Server: Poll status
activate Flask Server
Flask Server-->Browser: Status: running
deactivate Flask Server
Terraform-->Flask Server: Terraform output
deactivate Flask Server
deactivate Terraform
Browser->Flask Server: Poll status
activate Flask Server
Flask Server-->Browser: Status: success
deactivate Flask Server
Browser-->User: Displays success dialog
