title MC Hub - Cluster Destruction Workflow

participant User
participant Browser
participant Flask Server
participant Terraform

User->Browser: Navigates to localhost:5000
activate Browser
Browser->Flask Server: Requests clusters table
activate Flask Server
Flask Server-->Browser: Cluster clusters table
deactivate Flask Server
Browser-->User: Displays clusters table

Browser->Flask Server: Polls cluster status
activate Flask Server
Flask Server-->Browser: Status: provisioning_success
deactivate Flask Server
User->Browser: Clicks on the trash icon next to the desired cluster
Browser-->User: Displays loading animation
Browser->Flask Server: Sends DELETE request
activate Flask Server
Flask Server->Terraform: terraform init
activate Terraform
Flask Server->Terraform: terraform plan -destroy
Terraform-->Flask Server: Plan's raw output
deactivate Terraform
Flask Server-->Browser: Formatted plan
deactivate Flask Server
Browser-->User: Displays plan
User->Browser: Clicks "ok" to confirm
Browser->>Flask Server: Applies the plan
activate Flask Server
Flask Server->Terraform: terraform destroy
activate Terraform
Browser->Flask Server: Polls status
activate Flask Server
Flask Server-->Browser: Status: destroy_running
deactivate Flask Server
Terraform-->Flask Server: terraform destroy return code
deactivate Terraform
Flask Server->Flask Server: On success, removes the cluster folder
deactivate Flask Server
Browser->Flask Server: Polls status
activate Flask Server
Flask Server-->Browser: Status: not_found
deactivate Flask Server
Browser-->User: Redirection to home page